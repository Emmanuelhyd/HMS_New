@model Hospital_System.Viewmodel.Allview

@{
    ViewBag.Title = "Change Password";
    Layout = "~/Views/Shared/_PatientLayout.cshtml";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <title>@ViewBag.Title</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #eef2f3; /* Soft background color */
            margin: 0;
            padding: 0;
        }

        .container1 {
            margin: 30px auto;
            padding: 20px;
            background: #fff;
            border-radius: 8px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
            width: 90%; /* Responsive width */
            max-width: 400px; /* Max width for larger screens */
        }

        h2 {
            color: #333;
            text-align: center;
            margin-bottom: 20px;
        }

        .form-group {
            margin-bottom: 20px;
            position: relative;
        }

            .form-group label {
                display: block;
                font-weight: bold;
                margin-bottom: 5px;
                color: #333;
            }

            .form-group input[type="text"],
            .form-group input[type="password"] {
                width: 100%; /* Full width for inputs */
                padding: 10px 40px; /* Add padding to make room for icon */
                border: 1px solid #007bff; /* Primary color border */
                border-radius: 4px;
                box-sizing: border-box;
            }

            .form-group .text-danger {
                color: #d78484;
                font-size: 0.875rem;
                margin-top: 5px;
            }

        .btn-submit,
        .btn {
            display: block;
            width: 100%; /* Full width for buttons */
            padding: 10px;
            font-size: 1rem;
            color: #fff;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            transition: background-color 0.3s;
            margin-top: 20px;
        }

        .btn-submit {
            background-color: #007bff;
        }

            .btn-submit:hover {
                background-color: #0056b3;
            }

        .btn {
            background-color: dodgerblue; /* Back button color */
            margin: 0 auto; /* Center the button */
        }

            .btn:hover {
                background-color: #0056b3; /* Match hover effect */
            }

        .password-icon {
            position: absolute;
            right: 25px;
            margin-top: 0px;
            top: 50%;
            transform: translateY(-50%);
            cursor: pointer;
            color: #007bff; /* Icon color */
        }
    </style>
</head>
<body>
    <div class="container1">
        <button type="button" class="btn" onclick="Back()" style="width: 10%; margin-left: 0%;">
            <i class="fas fa-arrow-left"></i> 
        </button>
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            <h2>@ViewBag.Title</h2>
            <div style="color: #d78484; text-align: center; font-weight: 600; font-style: oblique;">
                @TempData["valid"]
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Patients.UserName)
                @Html.TextBoxFor(m => m.Patients.UserNameOrEmail, new { @placeholder = "UserNameOrEmail", @class = "form-control", id = "UserName" })
                @Html.ValidationMessageFor(m => m.Patients.UserNameOrEmail, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Patients.Password, "New Password")
                <div style="position: relative;">
                    @Html.PasswordFor(m => m.Patients.Password, new { @placeholder = "New Password", @class = "form-control", id = "Password" })
                    <i class="fas fa-eye password-icon" id="togglePassword" onclick="togglePasswordVisibility('Password')"></i>
                </div>
                @Html.ValidationMessageFor(m => m.Patients.Password, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Patients.ConfirmPassword, "Confirm Password")
                <div style="position: relative;">
                    @Html.PasswordFor(m => m.Patients.ConfirmPassword, new { @placeholder = "Confirm Password", @class = "form-control", id = "ConfirmPassword" })
                    <i class="fas fa-eye password-icon" id="toggleConfirmPassword" onclick="togglePasswordVisibility('ConfirmPassword')"></i>
                </div>
                @Html.ValidationMessageFor(m => m.Patients.ConfirmPassword, "", new { @class = "text-danger" })
            </div>

            <input type="submit" value="Change Password" class="btn-submit" />

        }
    </div>

    <script>
        document.querySelector('form').addEventListener('submit', function (event) {
            const username = document.getElementById('UserName').value;
            const password = document.getElementById('Password').value;
            const confirmPassword = document.getElementById('ConfirmPassword').value;

            // Validate username (example: must be alphanumeric and between 3-15 characters)
            const usernameRegex = /^[a-zA-Z0-9]{3,15}$/;
            if (!usernameRegex.test(username)) {
                alert("Invalid username. It must be 3-15 characters long and alphanumeric.");
                event.preventDefault(); // Prevent form submission
                return;
            }

            // Check if passwords match
            if (password !== confirmPassword) {
                alert("Passwords do not match. Please try again.");
                event.preventDefault(); // Prevent form submission
                return;
            }
        });

        function togglePasswordVisibility(id) {
            const passwordField = document.getElementById(id);
            const type = passwordField.type === "password" ? "text" : "password";
            passwordField.type = type;

            // Optionally toggle the icon class
            const icon = document.getElementById(`toggle${id}`);
            icon.classList.toggle('fa-eye');
            icon.classList.toggle('fa-eye-slash');
        }

        function Back() {
            window.location.href = "/Patient/Dashboard";
        }
    </script>
</body>
</html>
